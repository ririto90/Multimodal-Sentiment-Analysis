SLURM Job ID: 19420584
Number of GPUs available: 2
Logs directory: /home/rgg2706/Multimodal-Sentiment-Analysis/Logs/HHMAFM/2024-11-09/sub-3/005_Nov-09-2024_10:38_PM
> training arguments:
>>> rand_seed: 8
>>> model_name: mfcchfusion
>>> dataset: mvsa-mts-1000
>>> optimizer: <class 'torch.optim.adam.Adam'>
>>> initializer: <function xavier_uniform_ at 0x7f39ffe09580>
>>> learning_rate: 0.0003
>>> dropout_rate: 0.1
>>> num_epoch: 15
>>> batch_size: 128
>>> log_step: 60
>>> max_seq_len: 64
>>> polarities_dim: 3
>>> clip_grad: 5.0
>>> path_image: ./Datasets/MVSA-MTS/images-indexed
>>> crop_size: 224
>>> n_head: 8
>>> hidden_dim: 1024
>>> num_classes: 3
>>> log_dir: /home/rgg2706/Multimodal-Sentiment-Analysis/Logs/HHMAFM/2024-11-09/sub-3/005_Nov-09-2024_10:38_PM
>>> model_class: <class 'models.mfcchfusion.MFCCHFUSION'>
Preparing mvsa-mts-1000 dataset...
-------------- Loading Datasets/MVSA-MTS/mvsa-mts-1000/train.tsv ---------------
Time taken to load Datasets/MVSA-MTS/mvsa-mts-1000/train.tsv: 2.99 seconds (0.05 minutes)
The number of problematic samples: 69
-------------- Loading Datasets/MVSA-MTS/mvsa-mts-1000/val.tsv ---------------
Time taken to load Datasets/MVSA-MTS/mvsa-mts-1000/val.tsv: 0.37 seconds (0.01 minutes)
The number of problematic samples: 10
-------------- Loading Datasets/MVSA-MTS/mvsa-mts-1000/test.tsv ---------------
Time taken to load Datasets/MVSA-MTS/mvsa-mts-1000/test.tsv: 0.38 seconds (0.01 minutes)
The number of problematic samples: 6
Total Training Samples: 1000
Number of Training Samples: 800
Number of Development Samples: 100
Number of Test Samples: 100
Number of unique sentiment classes: 3
Building model
Using 2 GPUs
n_trainable_params: 360220675, n_nontrainable_params: 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
epoch: 0
text_proj shape: torch.Size([64, 1024])
resnet_proj shape: torch.Size([64, 1024])
topic_proj shape: torch.Size([64, 1024])
densenet_proj shape: torch.Size([64, 1024])
text_proj shape: torch.Size([64, 1024])
resnet_proj shape: torch.Size([64, 1024])
topic_proj shape: torch.Size([64, 1024])
densenet_proj shape: torch.Size([64, 1024])
